from picamera.array import PiRGBArray
from picamera import PiCamera
import numpy as np
import time
import cv2

kray=0
s=0
verh_x=0
verh_y=0
niz_x=0
niz_y=0
color_yellow = (0,255,255)
color_green = (0,255,0)
color_pink = (255,0,255)
sr_x=0
sr_y=0
camera = PiCamera()
camera.resolution = (640, 480)
camera.framerate = 32
camera.color_effects = (128, 128)
camera.sharpness = 100
camera.contrast = 100
rawCapture = PiRGBArray(camera, size=(640, 480))

time.sleep(0.1)

for frame in camera.capture_continuous(rawCapture, format="bgr", use_video_port=True):
    image = frame.array
    
    gray = cv2.GaussianBlur(image, (3, 3), 1)
    ret, binary = cv2.threshold(gray, 80, 255, cv2.THRESH_BINARY)

    for x in range(480):
        for y in range(640):
            if x==0 and y ==0:
                kray = set(binary[x,y])
            else:
                if set(binary[x, y])!=kray and s==0:
                    verh_x=x
                    verh_y=y
                    s=1703
                    break
    for x in range(479,0,-1):
        for y in range(639,0,-1):
            if set(binary[x, y])!=kray and s!=0:
                    niz_x=x
                    niz_y=y
                    s=0
                    break
    print('верхний край',verh_x,verh_y)
    print('нижний край',niz_x,niz_y)
    sr_x=(verh_x+niz_x)//2
    sr_y=(verh_y+niz_y)//2
    radius=niz_x-sr_x
    
    cv2.circle(binary,(sr_y,sr_x), 5, color_green,2)
    cv2.putText(binary,"%d-%d" % (sr_y,sr_x), (sr_x+10,sr_y+10), cv2.FONT_HERSHEY_SIMPLEX, 1, color_green,2)
    cv2.circle(binary,(sr_y,sr_x), radius, color_pink,2)
    cv2.putText(binary,"%d-%d" % (sr_y,sr_x), (sr_x+10,sr_y+10), cv2.FONT_HERSHEY_SIMPLEX, 1, color_pink,2)
    cv2.imshow("Frame", binary)

    key = cv2.waitKey(1) & 0xFF

    rawCapture.truncate(0)

    if key == ord("q"):
        break
